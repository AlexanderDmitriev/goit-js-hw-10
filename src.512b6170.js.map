{"version":3,"sources":["index.js"],"names":["DEBOUNCE_DELAY","fetch","then","response","json","country","console","log","catch","error"],"mappings":";;;AA2DA,aA3DA,QAAA,oBAEA,MAAMA,EAAiB,IAmDvBC,MAAM,4CACHC,KAAKC,GACGA,EAASC,QAEjBF,KAAKG,GAAWC,QAAQC,IAAIF,IAC5BG,MAAMC,GAASH,QAAQC,IAAIE","file":"src.512b6170.js","sourceRoot":"../src","sourcesContent":["import './css/styles.css';\n\nconst DEBOUNCE_DELAY = 300;\n\n/*\n    1. Напиши функцию fetchCountries(name) которая делает HTTP-запрос на ресурс name \nи возвращает промис с массивом стран - результатом запроса. \n\n    2. Вынеси её в отдельный файл fetchCountries.js и сделай именованный экспорт.\n\n    3. В ответе от бэкенда возвращаются объекты, большая часть свойств которых тебе не пригодится.\n Чтобы сократить объем передаваемых данных добавь строку параметров запроса - \n так этот бэкенд реализует фильтрацию полей. Ознакомься с документацией синтаксиса фильтров. Тебе нужны \n только следующие свойства:\n\nname.official - полное имя страны\ncapital - столица\npopulation - население\nflags.svg - ссылка на изображение флага\nlanguages - массив языков\n\n    4.Название страны для поиска пользователь вводит в текстовое поле input#search-box. \n    HTTP-запросы выполняются при наборе имени страны, то есть по событию input. \n    Но, делать запрос при каждом нажатии клавиши нельзя, так как одновременно получится много запросов и\n     они будут выполняться в непредсказуемом порядке.Необходимо применить приём Debounce \n     на обработчике события и делать HTTP-запрос спустя 300мс после того, \n     как пользователь перестал вводить текст. Используй пакет lodash.debounce.\n\n    5. Если пользователь полностью очищает поле поиска, то HTTP-запрос не выполняется, \n    а разметка списка стран или информации о стране пропадает.\n\n    6. Выполни санитизацию введенной строки методом trim(), \n    это решит проблему когда в поле ввода только пробелы или они есть в начале и в конце строки.\n\n    7. Если результат запроса это массив с одной страной, \n    в интерфейсе отображается разметка карточки с данными о стране: флаг, название, столица, население и языки.\n\n    8. Если бэкенд вернул от 2-х до 10-х стран, под тестовым полем отображается список найденных стран. \n    Каждый элемент списка состоит из флага и имени страны.\n\n    9.Если в ответе бэкенд вернул больше чем 10 стран, в интерфейсе пояляется уведомление о том, \n    что имя должно быть более специфичным. Для уведомлений используй библиотеку notiflix и выводи \n    такую строку \"Too many matches found. Please enter a more specific name.\"\n\n    10. Если пользователь ввёл имя страны которой не существует, бэкенд вернёт не пустой массив, \n    а ошибку со статус кодом 404 - не найдено. Если это не обработать, то пользователь никогда не узнает \n    о том, что поиск не дал результатов. Добавь уведомление \"Oops, there is no country with that name\" \n    в случае ошибки используя библиотеку notiflix.\n\n    11. Не забывай о том, что fetch не считает 404 ошибкой, поэтому необходимо явно отклонить промис \n    чтобы можно было словить и обработать ошибку.\n*/\n\nfetch('https://restcountries.com/v3.1/name/peru')\n  .then(response => {\n    return response.json();\n  })\n  .then(country => console.log(country))\n  .catch(error => console.log(error));\n//console.log(r);\n"]}